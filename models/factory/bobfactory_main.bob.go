// Code generated by BobGen sqlite v0.38.0. DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package factory

import "context"

type Factory struct {
	baseDrinkRecordMods DrinkRecordModSlice
	baseDrinkTypeMods   DrinkTypeModSlice
	baseUserMods        UserModSlice
}

func New() *Factory {
	return &Factory{}
}

func (f *Factory) NewDrinkRecord(ctx context.Context, mods ...DrinkRecordMod) *DrinkRecordTemplate {
	o := &DrinkRecordTemplate{f: f}

	if f != nil {
		f.baseDrinkRecordMods.Apply(ctx, o)
	}

	DrinkRecordModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) NewDrinkType(ctx context.Context, mods ...DrinkTypeMod) *DrinkTypeTemplate {
	o := &DrinkTypeTemplate{f: f}

	if f != nil {
		f.baseDrinkTypeMods.Apply(ctx, o)
	}

	DrinkTypeModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) NewUser(ctx context.Context, mods ...UserMod) *UserTemplate {
	o := &UserTemplate{f: f}

	if f != nil {
		f.baseUserMods.Apply(ctx, o)
	}

	UserModSlice(mods).Apply(ctx, o)

	return o
}

func (f *Factory) ClearBaseDrinkRecordMods() {
	f.baseDrinkRecordMods = nil
}

func (f *Factory) AddBaseDrinkRecordMod(mods ...DrinkRecordMod) {
	f.baseDrinkRecordMods = append(f.baseDrinkRecordMods, mods...)
}

func (f *Factory) ClearBaseDrinkTypeMods() {
	f.baseDrinkTypeMods = nil
}

func (f *Factory) AddBaseDrinkTypeMod(mods ...DrinkTypeMod) {
	f.baseDrinkTypeMods = append(f.baseDrinkTypeMods, mods...)
}

func (f *Factory) ClearBaseUserMods() {
	f.baseUserMods = nil
}

func (f *Factory) AddBaseUserMod(mods ...UserMod) {
	f.baseUserMods = append(f.baseUserMods, mods...)
}
